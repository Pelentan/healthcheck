droneData = {
  51: {
    id: 51,
    name: "JsonPlaceholderApi Test Site",
    droneType: "watch",
    uri: "https://jsonplaceholder.typicode.com",
    port: '',
    headers: [],
    active: true,
    checkInterval: 10,
    checkInterval_on_fail: 3,
    continue: true,
    cycleSuccessMsg: 'Verified Get user and Add user',
    cycleType: 'count',
    cycleCount: 0,
    cycle: 2,
    alertGroup: 1,
    alertSchedule: 1,  
    errStatus: false,
    errThreshold: 1,
    errCount: 0,   
    moduleKit: [
      {
        id: 2,
        name: 'Verify Get User',
        url: '/users/1',
        port: '',
        addHeaders: [],
        requestType: "get",
        timeout: 10000,
        statusGood: 200,
        returnType: 'json',
        dataPost: {},
        dataReturn: {
          username: "Bret",
          address: {
            city: 'Gwenborough',
            geo: {
                lat: "-37.3159",
            }
          }
        },
        authType: {
          type: '',
          user: '',
          pass: '',
          key: '',
        },   
        authTrigger: '',
      },
      {
        id: 2,
        name: 'Verify Post User',
        url: '/posts',
        port: '',
        addHeaders: [],
        requestType: "POST",
        statusGood: 201,
        returnType: 'json',
        dataPost: {
          "userId" : "17",
          "name" : "John Jacob",
          "email" : "pelentan@gmail.com"
        },
        dataReturn: {
          "id" : "",
          "userId" : "17",
          "name" : "John Jacob",
          "email" : "pelentan@gmail.com"
        },
        authType: {
          type: '',
          user: '',
          pass: '',
          key: '',
        },
      },
    ],
  },
  1: {
    id: 1,
    droneType: "watch",
    name: "LendPro Server",
    uri: "https://qa60.mylendpro.com/",
    port: '',
    active: true,headers: [],
    active: true,
    checkInterval: 10,
    checkInterval_on_fail: 3,
    continue: true,
    cycleSuccessMsg: 'Verified Login Page',
    cycleType: 'count',
    cycleCount: 0,
    cycle: 2,
    alertGroup: 1,
    alertSchedule: 1,  
    errStatus: false,
    errThreshold: 1,
    errCount: 0,   
    moduleKit: [
      {
        id: 1,
        url: '',
        port: '',
        addHeaders: [],
        requestType: "get",
        timeout: 10000,
        statusGood: 200,
        returnType: 'html',
        bodyScrape: "login",
        dataPost: {},
        dataReturn: {},
        authType: {
          type: '',
          user: '',
          pass: '',
          key: '',
        },   
      },
    ],
  }, 
  // 71: {
  //   id: 71,
  //   name: "HC Mongo server test",
  //   droneType: "watch",
  //   uri: "hc-mongo",
  //   port: 22,
  //   headers: [],
  //   active: true,
  //   checkInterval: 10,
  //   checkInterval_on_fail: 3,
  //   continue: true,
  //   cycleSuccessMsg: 'Server root checks passed',
  //   cycleType: 'count',
  //   cycleCount: 0,
  //   cycle: 1,
  //   alertGroup: 1,
  //   alertSchedule: 1,  
  //   errStatus: false,
  //   errThreshold: 1,
  //   errCount: 0,   
  //   moduleKit: [
  //     {
  //       id: 3,
  //       name: 'Verify Connection',
  //       url: '',
  //       port: 22,
  //       addHeaders: [],
  //       requestType: "",
  //       timeout: 10000,
  //       statusGood: 200,
  //       returnType: 'lynux',
  //       dataPost: {},
  //       dataReturn: {},
  //       authInfo: {
  //         type: 'privateKey',
  //         user: 'hcdronedock',
  //         pass: 'togatoga',
  //         key: 'remote_servers/hc-mongo/hc_npp',
  //       },   
  //       authTrigger: true,
  //     },
  //     {
  //       id: 4,
  //       name: 'Initiate server test-script(s) and retrive log file of results.',
  //       url: '',
  //       port: 22,
  //       addHeaders: [],
  //       requestType: "",
  //       statusGood: 200,
  //       returnType: 'json',
  //       dataPost: {
  //         "command": "bash",
  //         "script": "hc_server_checks.hc",
  //         "arguments": [
  //           1,
  //           5,
  //           "hc-server-report.hc"
  //         ],
  //         "exitCode": true,
  //         "exitCodePass": 0,
  //       },
  //       dataReturn: {
  //         "returnFile": "hc-server-report.hc",
  //         'fileScrap': ['toga', 'blue'],
  //       },
  //       authInfo: {
  //         type: 'privateKey',
  //         user: 'hcdronedock',
  //         pass: 'togatoga',
  //         key: 'hc_npp',
  //       },
  //       authTrigger: true,
  //     },
  //   ],
  // },
}

